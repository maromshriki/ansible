---
- name: Update all packages
  hosts: all
  become: yes
  tasks:
    - name: Update all installed packages to latest version
      yum:
        name: '*'
        state: latest

- name: Configure EC2 instance based on tags
  hosts: all
  become: yes
  gather_facts: true

  tasks:
    - name: Get EC2 metadata facts
      amazon.aws.ec2_metadata_facts:

    - name: Fail if host is not managed
      fail:
        msg: "This host is not managed."
      when: (hostvars[inventory_hostname]['tags']['Managed'] | default('false') | lower) != 'true'

    - name: Set hostname to tag Name
      hostname:
        name: "{{ hostvars[inventory_hostname]['tags']['Name'] }}"

    - name: Ensure cronie is installed
      package:
        name: cronie
        state: present

    - name: Install service from tag
      package:
        name: "{{ hostvars[inventory_hostname]['tags']['Service'] }}-{{ hostvars[inventory_hostname]['tags']['Version']}}"
        state: present

    - name: Downgrade service if tag version is lower than current
      shell: |
        current_version=$(rpm -q --queryformat '%{VERSION}' {{ hostvars[inventory_hostname]['tags']['Service'] }})
        if [ "$(printf '%s\n' $current_version {{ hostvars[inventory_hostname]['tags']['Version'] }} | sort -V | head -n1)" != "{{ hostvars[inventory_hostname]['tags']['Version'] }}" ]; then
          yum downgrade -y {{ hostvars[inventory_hostname]['tags']['Service'] }}-{{ hostvars[inventory_hostname]['tags']['Version'] }}
        fi
      args:
        executable: /bin/bash

    - name: Start and enable the service
      systemd:
        name: "{{
        'mariadb' if
        'mariadb' in (hostvars[inventory_hostname]['tags']['Service'] | default(''))
        else hostvars[inventory_hostname]['tags']['Service']
      }}"
        state: started
        enabled: yes
    
    - name: Install Docker
      yum:
        name: docker
        state: latest

    - name: Start and enable Docker
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Run Docker container
      docker_container:
        name: "{{ hostvars[inventory_hostname]['tags']['Service'] }}"
        image: "{{ hostvars[inventory_hostname]['tags']['DockerImage'] }}"
        state: started
        restart_policy: always
        published_ports: >-
          {{
            ['3307:3306'] if 'mariadb' in (hostvars[inventory_hostname]['tags']['Service'] | default(''))
            else ['8080:80']
          }}

